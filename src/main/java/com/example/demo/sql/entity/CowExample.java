package com.example.demo.sql.entity;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class CowExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public CowExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> catchTimeCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            catchTimeCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getCatchTimeCriteria() {
            return catchTimeCriteria;
        }

        protected void addCatchTimeCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            catchTimeCriteria.add(new Criterion(condition, value, "org.apache.ibatis.type.LocalDateTimeTypeHandler"));
            allCriteria = null;
        }

        protected void addCatchTimeCriterion(String condition, LocalDateTime value1, LocalDateTime value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            catchTimeCriteria.add(new Criterion(condition, value1, value2, "org.apache.ibatis.type.LocalDateTimeTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || catchTimeCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(catchTimeCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andOldIsNull() {
            addCriterion("old is null");
            return (Criteria) this;
        }

        public Criteria andOldIsNotNull() {
            addCriterion("old is not null");
            return (Criteria) this;
        }

        public Criteria andOldEqualTo(Integer value) {
            addCriterion("old =", value, "old");
            return (Criteria) this;
        }

        public Criteria andOldNotEqualTo(Integer value) {
            addCriterion("old <>", value, "old");
            return (Criteria) this;
        }

        public Criteria andOldGreaterThan(Integer value) {
            addCriterion("old >", value, "old");
            return (Criteria) this;
        }

        public Criteria andOldGreaterThanOrEqualTo(Integer value) {
            addCriterion("old >=", value, "old");
            return (Criteria) this;
        }

        public Criteria andOldLessThan(Integer value) {
            addCriterion("old <", value, "old");
            return (Criteria) this;
        }

        public Criteria andOldLessThanOrEqualTo(Integer value) {
            addCriterion("old <=", value, "old");
            return (Criteria) this;
        }

        public Criteria andOldIn(List<Integer> values) {
            addCriterion("old in", values, "old");
            return (Criteria) this;
        }

        public Criteria andOldNotIn(List<Integer> values) {
            addCriterion("old not in", values, "old");
            return (Criteria) this;
        }

        public Criteria andOldBetween(Integer value1, Integer value2) {
            addCriterion("old between", value1, value2, "old");
            return (Criteria) this;
        }

        public Criteria andOldNotBetween(Integer value1, Integer value2) {
            addCriterion("old not between", value1, value2, "old");
            return (Criteria) this;
        }

        public Criteria andCatchTimeIsNull() {
            addCriterion("catch_time is null");
            return (Criteria) this;
        }

        public Criteria andCatchTimeIsNotNull() {
            addCriterion("catch_time is not null");
            return (Criteria) this;
        }

        public Criteria andCatchTimeEqualTo(LocalDateTime value) {
            addCatchTimeCriterion("catch_time =", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeNotEqualTo(LocalDateTime value) {
            addCatchTimeCriterion("catch_time <>", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeGreaterThan(LocalDateTime value) {
            addCatchTimeCriterion("catch_time >", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCatchTimeCriterion("catch_time >=", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeLessThan(LocalDateTime value) {
            addCatchTimeCriterion("catch_time <", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeLessThanOrEqualTo(LocalDateTime value) {
            addCatchTimeCriterion("catch_time <=", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeLike(LocalDateTime value) {
            addCatchTimeCriterion("catch_time like", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeNotLike(LocalDateTime value) {
            addCatchTimeCriterion("catch_time not like", value, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeIn(List<LocalDateTime> values) {
            addCatchTimeCriterion("catch_time in", values, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeNotIn(List<LocalDateTime> values) {
            addCatchTimeCriterion("catch_time not in", values, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCatchTimeCriterion("catch_time between", value1, value2, "catchTime");
            return (Criteria) this;
        }

        public Criteria andCatchTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCatchTimeCriterion("catch_time not between", value1, value2, "catchTime");
            return (Criteria) this;
        }

        public Criteria andWeightIsNull() {
            addCriterion("weight is null");
            return (Criteria) this;
        }

        public Criteria andWeightIsNotNull() {
            addCriterion("weight is not null");
            return (Criteria) this;
        }

        public Criteria andWeightEqualTo(Double value) {
            addCriterion("weight =", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotEqualTo(Double value) {
            addCriterion("weight <>", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThan(Double value) {
            addCriterion("weight >", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThanOrEqualTo(Double value) {
            addCriterion("weight >=", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightLessThan(Double value) {
            addCriterion("weight <", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightLessThanOrEqualTo(Double value) {
            addCriterion("weight <=", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightIn(List<Double> values) {
            addCriterion("weight in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotIn(List<Double> values) {
            addCriterion("weight not in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightBetween(Double value1, Double value2) {
            addCriterion("weight between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotBetween(Double value1, Double value2) {
            addCriterion("weight not between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andBreedStatusIsNull() {
            addCriterion("breed_status is null");
            return (Criteria) this;
        }

        public Criteria andBreedStatusIsNotNull() {
            addCriterion("breed_status is not null");
            return (Criteria) this;
        }

        public Criteria andBreedStatusEqualTo(String value) {
            addCriterion("breed_status =", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusNotEqualTo(String value) {
            addCriterion("breed_status <>", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusGreaterThan(String value) {
            addCriterion("breed_status >", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusGreaterThanOrEqualTo(String value) {
            addCriterion("breed_status >=", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusLessThan(String value) {
            addCriterion("breed_status <", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusLessThanOrEqualTo(String value) {
            addCriterion("breed_status <=", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusLike(String value) {
            addCriterion("breed_status like", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusNotLike(String value) {
            addCriterion("breed_status not like", value, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusIn(List<String> values) {
            addCriterion("breed_status in", values, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusNotIn(List<String> values) {
            addCriterion("breed_status not in", values, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusBetween(String value1, String value2) {
            addCriterion("breed_status between", value1, value2, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andBreedStatusNotBetween(String value1, String value2) {
            addCriterion("breed_status not between", value1, value2, "breedStatus");
            return (Criteria) this;
        }

        public Criteria andIsHeatIsNull() {
            addCriterion("is_heat is null");
            return (Criteria) this;
        }

        public Criteria andIsHeatIsNotNull() {
            addCriterion("is_heat is not null");
            return (Criteria) this;
        }

        public Criteria andIsHeatEqualTo(Boolean value) {
            addCriterion("is_heat =", value, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatNotEqualTo(Boolean value) {
            addCriterion("is_heat <>", value, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatGreaterThan(Boolean value) {
            addCriterion("is_heat >", value, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_heat >=", value, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatLessThan(Boolean value) {
            addCriterion("is_heat <", value, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatLessThanOrEqualTo(Boolean value) {
            addCriterion("is_heat <=", value, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatIn(List<Boolean> values) {
            addCriterion("is_heat in", values, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatNotIn(List<Boolean> values) {
            addCriterion("is_heat not in", values, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatBetween(Boolean value1, Boolean value2) {
            addCriterion("is_heat between", value1, value2, "isHeat");
            return (Criteria) this;
        }

        public Criteria andIsHeatNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_heat not between", value1, value2, "isHeat");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cow
     *
     * @mbggenerated do_not_delete_during_merge Sat Jan 11 21:54:14 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cow
     *
     * @mbggenerated Sat Jan 11 21:54:14 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}